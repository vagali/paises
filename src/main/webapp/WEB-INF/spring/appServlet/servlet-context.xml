<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- DispatcherServlet Context: Define la infraestructura de este Servlet -->

	<!-- Habilita el modelo de programación a través de anotaciones (@Controller) 
		para Spring MVC -->
	<annotation-driven />

	<!-- Expone los recursos en la carpeta ${webappRoot}/recursos al usuario. 
		Siendo - mapping: Cómo vamos a llamar a los recursos desde las páginas Por 
		ejemplo: <link rel="stylesheet" href="/res/css/estilo.css"> - location: Dónde 
		se encuentran los recursos de la aplicación -->
	<resources mapping="/res/**" location="/recursos/" />

	<!-- Resuelve las vistas seleccionadas por @Controllers -->
	<beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/vistas/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- Escanéa el Classpath en búsqueda de anotaciones como @Component, @Repository, 
		@Service, @Controller, etc. -->
	<context:component-scan base-package="com.curso" />


	<!-- regional del usuario deacuerdo con el parámetro value -->
	<!-- Guarda el locale del usuario -->

	<!-- el id debe ser "localeResolver -->
	<beans:bean id="messageSource"

		class="org.springframework.context.support.ResourceBundleMessageSource">

		<beans:property name="basename">

			<beans:value>recursos/locale/mensajes</beans:value>

		</beans:property>

	</beans:bean>
	
	<!-- Guarda el locale del usuario -->
	<!-- el id debe ser "localeResolver -->
	<beans:bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<beans:property name="defaultLocale" value="es" />
	</beans:bean>

	<!-- cambia la configuración regional del usuario deacuerdo con el parámetro 
		value -->
	<beans:bean id="localeChangeInterceptor"
		class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<beans:property name="paramName" value="language" />
	</beans:bean>

	

	<!-- JPA - HIBERNATE -->

	<!-- data source contra bd -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName"
			value="oracle.jdbc.OracleDriver" />
		<beans:property name="url"
			value="jdbc:oracle:thin:@192.168.8.104:1521:xe" />
		<beans:property name="username" value="HR" />
		<beans:property name="password" value="hr" />
	</beans:bean>


	<!-- factoria de EntityManager de JPA - sustituye persiste.xml -->
	<beans:bean id="miEntityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<!-- property name="annotatedClasses" value="com.curso.domain.Producto" 
			/ -->
		<beans:property name="packagesToScan" value="com.curso.domain" />
		<beans:property name="jpaVendorAdapter">
			<beans:bean
				class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</beans:property>
		<beans:property name="jpaProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</beans:prop>
				<!--  <beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>-->
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.format_sql">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>


	<beans:bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<beans:property name="entityManagerFactory"
			ref="miEntityManagerFactory" />
	</beans:bean>
	<!-- @Transactional el inic tx y commit o rollback -->
	<tx:annotation-driven
		transaction-manager="transactionManager" />

</beans:beans>
